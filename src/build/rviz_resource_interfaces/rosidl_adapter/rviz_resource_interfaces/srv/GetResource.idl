// generated from rosidl_adapter/resource/srv.idl.em
// with input from rviz_resource_interfaces/srv/GetResource.srv
// generated code does not contain a copyright notice


module rviz_resource_interfaces {
  module srv {
    @verbatim (language="comment", text=
      "Resource path of the requested resource.")
    struct GetResource_Request {
      string path;

      @verbatim (language="comment", text=
        "HTTP-style ETag value for the requested resource." "\n"
        "See: https://en.wikipedia.org/wiki/HTTP_ETag" "\n"
        "" "\n"
        "If this value is empty, then the server shall respond with the current" "\n"
        "version of the resource and the ETag value, if it can be loaded." "\n"
        "If this value is not-empty, then the server may respond with a new resource" "\n"
        "and ETag value." "\n"
        "However, if the ETag value for the resource has not changed, then the server" "\n"
        "may respond with NOT_MODIFIED as the status_code, similar to" "\n"
        "\"HTTP 304: Not Modified\"." "\n"
        "See: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#304" "\n"
        "The server may also ignore this value and always send the current version" "\n"
        "of the resource and its ETag value, if caching is not implemented.")
      string etag;
    };
    module GetResource_Response_Constants {
      @verbatim (language="comment", text=
        "An unspecified error occurred, check the error_reason string.")
      const int32 ERROR = 0;
      @verbatim (language="comment", text=
        "The request was successful, etag and body will be set with valid values," "\n"        "though etag may be empty." "\n"        "The error_reason will be empty.")
      const int32 OK = 1;
      @verbatim (language="comment", text=
        "The request was successful, but the etag value has not changed." "\n"        "The etag value will be set to the requested etag value, but the body value" "\n"        "will be empty." "\n"        "The error_reason should also be empty.")
      const int32 NOT_MODIFIED = 2;
    };
    struct GetResource_Response {
      @verbatim (language="comment", text=
        "Status code for the request, can be one of the above options.")
      int32 status_code;

      @verbatim (language="comment", text=
        "Optionally set error reason string.")
      string error_reason;

      @verbatim (language="comment", text=
        "Expanded path, which may or may not be different from the given path." "\n"
        "The Service may expand, extend, or otherwise further qualify the path as it" "\n"
        "resolves it, any of which would be reflected in this expanded path.")
      string expanded_path;

      @verbatim (language="comment", text=
        "HTTP-style ETag value for the requested resource." "\n"
        "See: https://en.wikipedia.org/wiki/HTTP_ETag" "\n"
        "" "\n"
        "As with the HTTP ETag, the value is unspecified, but it is described as:" "\n"
        "" "\n"
        "> Common methods of ETag generation include using a collision-resistant hash" "\n"
        "> function of the resource's content, a hash of the last modification" "\n"
        "> timestamp, or even just a revision number." "\n"
        "" "\n"
        "This value may be empty if the server does not implement cache checking." "\n"
        "" "\n"
        "This can be sent on subsequent requests to avoid getting the same unchanged" "\n"
        "resource multiple times.")
      string etag;

      @verbatim (language="comment", text=
        "Opaque value of the resource.")
      sequence<uint8> body;
    };
  };
};
